cmake_minimum_required(VERSION 3.5.1)
SET(CMAKE_SYSTEM_NAME Linux)
PROJECT(AML_NNSDK)

# SET(ARM_32 arm_32)
set(ARM_64 arm_64)
set(GCC_PATH /mnt/fileroot/xinxin.he/buildroot/toolchain/gcc/linux-x86)

if(DEFINED ARM_64)
	set(COMPILER ${GCC_PATH}/aarch64/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin)
	set(CMAKE_C_COMPILER ${COMPILER}/aarch64-linux-gnu-gcc)
	set(CMAKE_CXX_COMPILER ${COMPILER}/aarch64-linux-gnu-g++)
    link_directories(../nnsdk_v2.6.0/lib/lib64)
elseif(DEFINED ARM_32)
	set(COMPILER ${GCC_PATH}/arm/gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf/bin)
	set(CMAKE_C_COMPILER ${COMPILER}/arm-none-linux-gnueabihf-gcc)
	set(CMAKE_CXX_COMPILER ${COMPILER}/arm-none-linux-gnueabihf-g++)
	link_directories(../nnsdk_v2.6.0/lib/lib32)
endif()

include_directories(../nnsdk_v2.6.0/include ../nnsdk_v2.6.0/include/jpeg)
aux_source_directory(. SRC_LIST)
link_libraries(nnsdk libjpeg.a)

if(DEFINED ARM_64)
	add_executable(case_classify_linux_64 ${SRC_LIST})
	target_link_libraries(case_classify_linux_64 -lpthread -lm -ldl)
elseif(DEFINED ARM_32)
	add_executable(case_classify_linux_32 ${SRC_LIST})
	target_link_libraries(case_classify_linux_32 -lpthread -lm -ldl)
endif()